import { QuickPickItem, QuickPickItemKind as K } from "vscode";

export const globalEvents: QuickPickItem[] = [
  { label: "Mouse events", kind: K.Separator },
  { label: "on:click", description: "The element is being clicked event" },
  { label: "on:contextmenu", description: "Context menu event" },
  { label: "on:dblclick", description: "Double click event" },
  { label: "on:mouseenter", description: "Mouse enter event" },
  { label: "on:mousedown", description: "Mouse down event" },
  { label: "on:mouseup", description: "Mouse up event" },
  { label: "on:mouseleave", description: "Mouse leave event" },
  { label: "on:mouseover", description: "Mouse over event" },
  { label: "on:mouseout", description: "Mouse out event" },
  { label: "on:mousewheel", description: "Mouse wheel event"},
  { label: "on:mousemove", description: "Mouse move event" },
  { label: "on:wheel", description: "Wheel event" },
  { label: "on:scroll", description: "Scroll event" },

  { label: "Keyboard events", kind: K.Separator },
  { label: "on:keypress", description: "Key press event" },
  { label: "on:keydown", description: "Key down event" },
  { label: "on:keyup", description: "Key up event" },

  { label: "Focus events", kind: K.Separator },
  { label: "on:blur", description: "Element loses focus event" },
  { label: "on:focus", description: "Focus event" },

  { label: "Form events", kind: K.Separator },
  { label: "on:change", description: "The value of the element is changed event" },
  { label: "on:input", description: "Input event" },
  { label: "on:submit", description: "Submit event" },
  { label: "on:select", description: "Select event" },

  { label: "Drag events", kind: K.Separator },
  { label: "on:dragstart", description: "Drag start event" },
  { label: "on:drag", description: "Drag event" },
  { label: "on:dragend", description: "Drag end event" },
  { label: "on:dragenter", description: "Drag enter event" },
  { label: "on:dragover", description: "Drag over event" },
  { label: "on:dragleave", description: "Drag leave event" },
  { label: "on:drop", description: "Drop event" },

  { label: "Clipboard events", kind: K.Separator },
  { label: "on:copy", description: "The content of the element is being copied event" },
  { label: "on:cut", description: "The content of the element is being cut event" },
  { label: "on:paste", description: "Paste event" },
];

export const specificEvents = new Map<string, QuickPickItem[]>([
  [
    "audio",
    [
      { label: "on:canplay", description: "The browser can start playing the video (when it has buffered enough to begin)" },
      { label: "on:canplaythrough", description: "The browser can play through the video without stopping for buffering" },
      { label: "on:durationchange", description: "Script to be run when the length of the media changes" },
      { label: "on:emptied", description: "Script to be run when something bad happens and the file is suddenly unavailable" },
      { label: "on:ended", description: "Script to be run when the media has reach the end (a useful event for messages like \"thanks for listening\")" },
      { label: "on:loadeddata", description: "Script to be run when the browser has loaded the current frame of the video" },
      { label: "on:loadedmetadata", description: "Script to be run when the browser has loaded meta data for the video" },
      { label: "on:loadstart", description: "Script to be run when the browser starts looking for the specified video" },
      { label: "on:pause", description: "Script to be run when the media has been paused" },
      { label: "on:play", description: "Script to be run when the media has been started or is no longer paused" },
      { label: "on:playing", description: "Script to be run when the media has started playing" },
      { label: "on:progress", description: "Script to be run when the browser is in the process of getting the media data" },
      { label: "on:ratechange", description: "Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)" },
      { label: "on:seeked", description: "Script to be run when the user is finished moving/skipping to a new position in the video" },
      { label: "on:seeking", description: "Script to be run when the user starts moving/skipping to a new position in the video" },
      { label: "on:stalled", description: "Script to be run when the browser is trying to get media data, but data is not available" },
      { label: "on:suspend", description: "Script to be run when the browser is intentionally not getting media data" },
      { label: "on:timeupdate", description: "Script to be run when the current playback position has changed (like when the user fast forwards to a different point in the media)" },
      { label: "on:volumechange", description: "Script to be run each time the volume is changed which (includes setting the volume to \"mute\")" },
      { label: "on:waiting", description: "Script to be run when the video stops because it needs to buffer the next frame" },
    ],
  ],
  [
    "video",
    [
      { label: "on:canplay", description: "The browser can start playing the video (when it has buffered enough to begin)" },
      { label: "on:canplaythrough", description: "The browser can play through the video without stopping for buffering" },
      { label: "on:durationchange", description: "Script to be run when the length of the media changes" },
      { label: "on:emptied", description: "Script to be run when something bad happens and the file is suddenly unavailable" },
      { label: "on:ended", description: "Script to be run when the media has reach the end (a useful event for messages like \"thanks for listening\")" },
      { label: "on:loadeddata", description: "Script to be run when the browser has loaded the current frame of the video" },
      { label: "on:loadedmetadata", description: "Script to be run when the browser has loaded meta data for the video" },
      { label: "on:loadstart", description: "Script to be run when the browser starts looking for the specified video" },
      { label: "on:pause", description: "Script to be run when the media has been paused" },
      { label: "on:play", description: "Script to be run when the media has been started or is no longer paused" },
      { label: "on:playing", description: "Script to be run when the media has started playing" },
      { label: "on:progress", description: "Script to be run when the browser is in the process of getting the media data" },
      { label: "on:ratechange", description: "Script to be run each time the playback rate changes (like when a user switches to a slow motion or fast forward mode)" },
      { label: "on:seeked", description: "Script to be run when the user is finished moving/skipping to a new position in the video" },
      { label: "on:seeking", description: "Script to be run when the user starts moving/skipping to a new position in the video" },
      { label: "on:stalled", description: "Script to be run when the browser is trying to get media data, but data is not available" },
      { label: "on:suspend", description: "Script to be run when the browser is intentionally not getting media data" },
      { label: "on:timeupdate", description: "Script to be run when the current playback position has changed (like when the user fast forwards to a different point in the media)" },
      { label: "on:volumechange", description: "Script to be run each time the volume is changed which (includes setting the volume to \"mute\")" },
      { label: "on:waiting", description: "Script to be run when the video stops because it needs to buffer the next frame" },
    ],
  ],
]);
